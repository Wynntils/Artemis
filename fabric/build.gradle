buildscript {
    repositories {
        maven {
            url "https://jitpack.io/"
        }

        dependencies {
            classpath "com.github.coehlrich:EventBusTransformer:main-SNAPSHOT"
        }
    }
}

plugins {
    id "com.github.johnrengelman.shadow" version "7.1.0"
}

import com.wynntils.eventbustransformer.EventBusTransform

architectury {
    platformSetupLoomIde()
    fabric {
        it.add(EventBusTransform.class)
    }
}

configurations {
    common
    // Don't use shadow from the shadow plugin because we don't want IDEA to index this.
    shadowCommon
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentFabric.extendsFrom common
}

repositories {
    maven {
        url "https://jitpack.io"
    }
}

dependencies {
    modImplementation "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"
    modApi "net.fabricmc.fabric-api:fabric-api:${rootProject.fabric_api_version}"

    common(project(path: ":common", configuration: "namedElements")) { transitive false }
    shadowCommon(project(path: ":common", configuration: "transformProductionFabric")) { transitive false }

    implementation "net.minecraftforge:eventbus:${rootProject.forge_eventbus_version}"
    implementation "com.github.coehlrich:EventBusTransformer:main-SNAPSHOT"
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

shadowJar {
    configurations = [project.configurations.shadowCommon]
    classifier "dev-shadow"
}

remapJar {
    input.set shadowJar.archiveFile
    dependsOn shadowJar
    classifier null
}

jar {
    classifier "dev"
}

sourcesJar {
    def commonSources = project(":common").sourcesJar
    dependsOn commonSources
    from commonSources.archiveFile.map { zipTree(it) }
}

components.java {
    withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
        skip()
    }
}

task applyEventBus(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = "com.wynntils.eventbustransformer.Main"
    args shadowJar.archiveFile.get().getAsFile().getAbsolutePath()
    workingDir = "${buildDir}"
}

applyEventBus {
    dependsOn shadowJar
}

remapJar {
    dependsOn applyEventBus
}
