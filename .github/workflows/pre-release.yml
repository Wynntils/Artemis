name: Publish Pre Release

on:
  push:
    branches:
      - alpha

jobs:
  changelog:
    name: Generate Changelog
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.changelog.outputs.tag }}
      skipped: ${{ steps.changelog.outputs.skipped }}
      clean_changelog: ${{ steps.changelog.outputs.clean_changelog }}
      changelog: ${{ steps.changelog.outputs.changelog }}
      build_number: ${{ steps.extract.outputs.build_number }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          token: ${{ secrets.PRIVATE_TOKEN }}

      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - run: npm install conventional-changelog-conventionalcommits

      - name: Create changelog
        id: changelog
        uses: DevScyu/conventional-changelog-action@v4
        with:
          github-token: ${{ secrets.PRIVATE_TOKEN }}
          git-user-name: 'WynntilsBot'
          git-user-email: 'admin@wynntils.com'
          pre-commit: ./.github/.pre-commit.js
          config-file-path: ./.github/.config.js
          skip-version-file: true
          skip-git-pull: true
          pre-release: true
          pre-release-identifier: alpha

      - name: Extract build information
        id: extract
        run: "echo ::set-output name=build_number::`echo ${{ steps.changelog.outputs.tag }} | cut -d'.' -f4`"

      - name: Upload version information
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: build.gradle

  build:
    name: Build
    needs: [changelog] # Build needs the new version number
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Cache Gradle data
        uses: actions/cache@v3
        with:
          path: .gradle
          key: ${{ runner.os }}-gradle--${{ hashFiles('**/build.gradle', '**/settings.gradle', '**/gradle.properties') }}

      - uses: actions/download-artifact@v3 # Download version information from changelog
        with:
          name: build

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: "temurin"
          java-version: 17
          cache: "gradle"

      - name: Format with spotless
        uses: gradle/gradle-build-action@v2
        with:
          arguments: spotlessApply --build-cache

      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_user_name: 'WynntilsBot'
          commit_user_email: 'admin@wynntils.com'
          commit_message: 'ci: spotless formatting [skip ci]'

      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        env:
          BUILD_NUMBER: ${{ needs.changelog.outputs.build_number }}
        with:
          arguments: build -x spotlessCheck --build-cache

      - name: Upload build
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: |
            **/build/libs/*-fabric.jar
            **/build/libs/*-forge.jar
            **/build/libs/*-quilt.jar
          if-no-files-found: error

  release:
    name: Release to Modrinth and CurseForge
    strategy:
      matrix:
        modloader: [fabric, forge, quilt]
    runs-on: ubuntu-latest
    needs: [build, changelog]
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: build

      - uses: Kir-Antipov/mc-publish@v3.2
        with:
          modrinth-id: dU5Gb9Ab
          modrinth-featured: true
          modrinth-unfeature-mode: subset
          modrinth-token: ${{ secrets.MODRINTH_API_TOKEN }}

          curseforge-id: 303451
          curseforge-token: ${{ secrets.CF_API_TOKEN }}

          files-primary: "**/build/libs/*-@(${{ matrix.modloader }}).jar"
          files-secondary: ""

          name: Wynntils Artemis (${{ matrix.modloader }}) ${{ needs.changelog.outputs.tag }}
          version: ${{ needs.changelog.outputs.tag }}
          version-type: alpha
          changelog: ${{ needs.changelog.outputs.changelog }}

          loaders: ${{ matrix.modloader }}
          game-versions: 1.18.2
          java: 17


  release-gh:
    name: Release Github
    runs-on: ubuntu-latest
    needs: [build, changelog]
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: build

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          files: "**/build/libs/*-*.jar"
          tag_name: ${{ needs.changelog.outputs.tag }}
          prerelease: true
          body: ${{ needs.changelog.outputs.clean_changelog }}
          target_commitish: ${{ github.sha }}
